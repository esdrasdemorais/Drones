buildscript {
	ext {
	    //springBootVersion = '2.1.1.BUILD-SNAPSHOT'
	    //springBootVersion = '2.1.1.RELEASE'
	    springCloudContractVersion = '2.1.0.RELEASE'//'2.1.1.BUILD-SNAPSHOT'	    
	    springBootPluginVersion = '2.1.2.RELEASE'
	    springCloudDependencies = '2.1.0.RELEASE'
	}
	repositories {
	    mavenCentral()
	    mavenLocal()
	    maven { url "http://repo.spring.io/snapshot" }
	    maven { url "http://repo.spring.io/milestone" }
	    maven { url "http://repo.spring.io/release" }
	    maven { url "https://repo.spring.io/snapshot" }
	    maven { url "https://repo.spring.io/milestone" }
	    maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
	    //classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	    classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudContractVersion}"
	    classpath "com.jayway.restassured:rest-assured:2.5.0"
	    classpath "com.jayway.restassured:spring-mock-mvc:2.5.0"
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootPluginVersion}"
            classpath "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
	}
}

plugins {
    id 'net.ltgt.apt' version '0.15'
    id 'org.springframework.boot' version '2.1.2.RELEASE'
}

ext {
    mapstructVersion = "1.3.0.Beta2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: "net.ltgt.apt"
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.ltgt.apt-eclipse'
apply plugin: 'groovy'
//apply plugin: 'spring-boot'
apply plugin: 'spring-cloud-contract'
//apply plugin: 'application'

bootJar {
	baseName = 'eureka-service'
	baseName = 'eureka-client'
	version = '0.0.1-SNAPSHOT'
}

group = 'com.esdrasmorais'
version = '0.1.7-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'com.esdrasmorais.drones.ui.SpringEurekaServerApplication'

// tag::repositories[]
repositories {
    mavenCentral()
    //maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}
// end::repositories[]

ext {
    springCloudVersion = 'Greenwich.RC2'
}

// tag::jar[]
jar {
    baseName = 'gs-gradle'
    version =  '0.1.7'
}
// end::jar[]

allprojects {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

ext['springCloudVersion'] = 'Greenwich.RC2'

// tag::dependencies[]
dependencies {
    // https://mvnrepository.com/artifact/org.springframework/spring-core
    compile group: 'org.springframework', name: 'spring-core', version: '5.1.4.RELEASE'

    //implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')   
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-zuul
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-zuul', version: '2.1.0.RELEASE'

    implementation 'com.github.esdrasdemorais:Ddd:master-SNAPSHOT'

    //testCompile("junit:junit")

    compile "joda-time:joda-time:2.2"
    testCompile "junit:junit:4.12"

    //compile 'org.mongodb:mongodb-driver:3.8.2'

    // https://mvnrepository.com/artifact/org.picocontainer/picocontainer
    compile group: 'org.picocontainer', name: 'picocontainer', version: '2.15'

    implementation('org.springframework.boot:spring-boot-starter-web')    

    //implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-server
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '2.1.0.RELEASE'

    //compile 'org.springframework.cloud:spring-cloud-starter-config'

    //implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '2.1.0.RELEASE'  

    //runtimeOnly('org.springframework.boot:spring-boot-devtools')
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.1.2.RELEASE'

    //testImplementation('org.springframework.boot:spring-boot-starter-test')
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.2.RELEASE'

    compile "org.mapstruct:mapstruct:${mapstructVersion}"

    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-contract-gradle-plugin
    compile group: 'org.springframework.cloud', name: 'spring-cloud-contract-gradle-plugin', version: '2.1.0.RELEASE'

    //testCompile 'org.codehaus.groovy:groovy-all:2.5'
    // https://mvnrepository.com/artifact/org.codehaus.groovy/groovy-all
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.0-alpha-4'

    // example with adding Spock core and Spock Spring
    //testCompile 'org.spockframework:spock-core:1.0-groovy-2.5'
    //    testCompile "org.spockframework:spock-core:1.1-groovy-2.5"
    // https://mvnrepository.com/artifact/org.spockframework/spock-core
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.3-RC1-groovy-2.5'

    //testCompile 'org.spockframework:spock-spring:1.0-groovy-2.5'
    // https://mvnrepository.com/artifact/org.spockframework/spock-spring
    testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.3-RC1-groovy-2.5'

    //testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-contract-verifier
    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-verifier', version: '2.1.0.RELEASE'

    //testCompile "org.springframework.cloud:spring-cloud-stream-test-support"
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-stream-test-support
    testCompile group: 'org.springframework.cloud', name: 'spring-cloud-stream-test-support', version: '2.1.0.RELEASE'

    // you can exclude rest-assured from spring-cloud-contract-verifier
    testCompile "com.jayway.restassured:rest-assured:2.5.0"
    testCompile "com.jayway.restassured:spring-mock-mvc:2.5.0"

    testCompile('org.springframework.boot:spring-boot-starter-test')
    //testCompile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-eureka-server
    //compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-eureka-server', version: '1.4.6.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-server
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-server', version: '2.1.0.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies
    compile group: 'org.springframework.cloud', name: 'spring-cloud-dependencies', version: "Greenwich.RELEASE"

    compile("com.google.dagger:dagger:2.18")
    annotationProcessor("com.google.dagger:dagger-compiler:2.18")

    // auto-factory contains both annotations and their processor, neither is needed at runtime
    compileOnly("com.google.auto.factory:auto-factory:1.0-beta6")
    annotationProcessor("com.google.auto.factory:auto-factory:1.0-beta6")

    compileOnly("org.immutables:value-annotations:2.7.1")
    annotationProcessor("org.immutables:value:2.7.1")

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.1.2.RELEASE'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.1.2.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
    compile group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.1.2.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-contract-dependencies
    compile group: 'org.springframework.cloud', name: 'spring-cloud-contract-dependencies', version: '2.1.0.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-context
    compile group: 'org.springframework.cloud', name: 'spring-cloud-context', version: '2.1.0.RELEASE'

    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.16'
}
// end::dependencies[]

dependencyManagement {
    imports {
	mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE"
	//mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.SR2'
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudDependencies}"
    }
}


eclipse {
  //  classpath {
//	 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
//	 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    //}
}
